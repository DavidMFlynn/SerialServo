TTL Serial connected to a USB to Serial.

All packets are 6 bytes w/o optional sync bytes and checksum:
Source Address, Destination Address and 4 data bytes
or
0xDD,0xDD,Source Address, Destination Address and 4 data bytes, Checksum (XOR of Source Addr, Dest Addr, 4 Data bytes)

Default master address is 1
Default slave address is 2

All commands return something. Some return a data packet (Slave,Master,Data0,Data1,Data2,Data3),
others return only a single byte (0xFF) as an acknowledgment 

Mode:
------------------------------------------------------------------------------------------
Mode 0: (LED 1 = off) servo test mode, copy AN4 Pot value to servo.
Mode 1: (LED 1 = 1 flash) servo and encoder test mode, AN4 Pot value - EncoderVal to servo dir.
Mode 2: Basic Serial Servo, output servo pulse of CmdPos * 0.5uS.
Mode 3: Absolute encoder position control.


Commands:
kCmd_SetMode(0x81)	+1 data (SysMode), return ACK
kCmd_GetMode(0x01)
kCmd_SetCmdPos(0x82)	+2 data (ssCmdPos), return ACK
kCmd_GetCmdPos(0x02)
kCmd_SetMaxI(0x83)	+1 data (ssMaxI), return ACK
kCmd_GetMaxI(0x03)
kCmd_SetFFwd(0x84)	+2 data (ServoFastForward), return ACK
kCmd_GetFFwd(0x04)
kCmd_SetFRev(0x85)	+2 data (ServoFastReverse), return ACK
kCmd_GetFRev(0x05)
kCmd_SetMin_uS(0x86)	+2 data (ServoMin_uS), return ACK
kCmd_GetMin_uS(0x06)
kCmd_SetMax_uS(0x87)	+2 data (ServoMax_uS), return ACK
kCmd_GetMax_uS(0x07)
kCmd_SetRevDir(0x88)	+1 data (ssReverseDir), return ACK
kCmd_GetRevDir(0x08)
kCmd_SetEnaOvrCur(0x89)  +1 data (ssEnableOverCur), return ACK
kCmd_GetEnaOvrCur(0x09)
kCmd_Set_HighZ_TX(0x8A)  +1 data (ssEnableHighZTZ), return ACK
kCmd_Get_HighZ_TX(0x0A)
kCmd_SetStopCenter(0x8B) +2 data (ServoStopCenter), return ACK
kCmd_GetStopCenter(0x0B)
kCmd_SetSpeed(0x8C)      +1 data (ServoSpeed), return ACK
kCmd_GetSpeed(0x0C)
kCmd_SetUseIdleCenter(0x8D) +1 data (ssMode3IdleCenter), return ACK
kCmd_GetUseIdleCenter(0x0D)
kCmd_SetDeadBand(0x8E) +1 data (DeadBand), return ACK
kCmd_GetDeadBand(0x0E)
kCmd_SetUseFastPWM(0x8F) +1 data (ssEnableFastPWM), return ACK
kCmd_GetUseFastPWM(0x0F)
kCmd_SetGripI(0xB1)	+1 data (ssGripI), return ACK
kCmd_GetGripI(0x21)
kCmd_SetAuxConfig(0xB2)  +3 data (Aux0Config,Aux1Config,Aux2Config), return ACK
kCmd_GetAuxConfig(0x22)
kCmd_SetAuxNValue(0xB3)  +2 data (AuxNum,Value), return ACK
kCmd_GetAuxNValue(0x23)  (AuxN,ValueL,ValueH)
;
kCmd_GetI(0x91)	return Cur_AN0
kCmd_GetEnc(0x92)	return EncoderVal
kCmd_GetEncAbs(0x93)	return EncoderAccum
kCmd_SaveParams(0x94)	Save all eeprom params, return ACK
kCmd_RestoreParams(0x95)  Copy to ram, return ACK
kCmd_GetBattVolts(0x96)  return Cur_AN7
kCmd_GetCalPot(0x97)	 return Cur_AN4
kCmd_GetStatus(0x98)    return ssStatus:4
;
; these commands save params and return a 0,0,0,0 packet with the new address
kCmd_SetMasterAddr(0xA1) +1 data, return a zero packet
kCmd_SetSlaveAddr(0xA2) +1 data, return a zero packet
kCmd_SendIDString(0xAA) Special packet (0xDD, 0xDD, 0x01, 0x02, 0xAA, 0x00, 0x00, 0x00, checksum) returns "DMFE Serial Servo\n"

Aux(0,1,2)Config byte		Data to/from
0	Default/Unused	none
1	LED/Btn	LED Flashes 0..9,15 (15=on)/High nibble=Flashes, Low = Btn
2	Digital Input	none/Bit(0/1)
3	Digital Output	Bit(0/1)/Bit(0/1)
4	Analog Input	none/10 bit ADC value
5	Home Switch/Digital Input none/Bit(0/1)
6	Fwd Limit Switch/Digital Input none/Bit(0/1)
7	Rev Limit Switch/Digital Input none/Bit(0/1)

Encoder Cable
--------------------------------------------
WM1723-ND   Connector Housing 5pos 1.25mm 
WM12935-ND  Wires w/ pre-crimped terminals
WM2903-ND   Connector Housing 5 pos .100
2510-ND     Connector Terminal Tin
24 AWG style 1007, Red, Yellow, Black, Green, Blue

J2 Pin        Wire      Encoder
1 VDD         Red       1 5V Supply Voltage
2 CSn Output  Yellow    2 Chip Select active low Input
3 VSS         Black     3 Supply Ground
4 CLK Output  Green     4 Serial Clock Input
5 DO  Input   Blue      5 DO Serial Data Output


Serial Servo PCB Rev B Bill of Material
-----------------------------------------------------------------------------------------------
R1	Resistor 220Ω SMT 0805
R2,R3,R7,R12,R14,
R16,R18,R19,R20,R21	Resistor 1.00KΩ SMT 0805
R4,R9	Resistor 100KΩ SMT 0805
R5,R11	Resistor 10.0KΩ SMT 0805
R6	Resistor 0.2Ω 1W SMT 2512
R8	Resistor SMT 0805
R10	Resistor 47KΩ SMT 0805
R13	omitted from Rev B
R22	Resistor 120Ω  SMT 0805
RV1	Potentiometer 20KΩ

C1,C3,C4,C6,C7,
C8,C11,C12,C13,C14	Capacitor 0.1uf 50V SMT 0805
C2,C5	Capacitor 2.2uf 25V Electrolytic
C9	Capacitor 220uf 25V Electrolytic
C10	Capacitor 1.0uf 25V SMT 0805

U1	PIC16F1847 SMT SO-18
U2	LM358AM SMT SO-8

VR1	Linear Voltage Regulator L78L05 TO-92
VR2	6V 1.5A In-Gnd-Out (optional)
VR3	Adj D-Pak Adj-Out-In (optional)
D5	Diode SMA Rectifier (logic power)
D6	Diode SMA Rectifier (servo power optional)

J1	Connector 4 Pos (power & IO)
J2	Connector 5 Pos (encoder)
J3	Connector 5 Pos (optional)
J4	Connector 3 Pos (Servo)
J5,J6,J7	Connector 3 Pos (optional)
J8	Jumper Servo Power Regulator Bypass (optional)

Options (Note: Some options are mutually exclusive)
------------
AN1/RA1:	LED install D1, R12
	Push-Button Switch R13,SW1
	Analog input R18,C11,J5
	Digital I/O R13,R18,C11,J5

AN2/RA2:	LED install D2, R14
	Push-Button Switch R15,SW2
	Analog input R19,C12,J6
	Digital I/O R15,R19,C12,J6

AN3/RA3:	LED install D3, R16
	Push-Button Switch R17,SW3
	Analog input R20,C13,J7
	Digital I/O R17,R20,C13,J7
	
R13,R15,R17 Pull-Ups for digital inputs
C11,C12,C13 Integation for analog/digital input

Servo Power:	6V 1.5A VR2,D6,C5,C8,C9
	Adj 3A, VR3,D6,C5,C8,C9,R8,R22
	Direct C8,C9,J8
	D6 may be Jumped
	
Battery Voltage:	R2,R4,R5,C3,U2B

Servo Current:	R7,R9,R10,R11,C7,C10,U2A

System LED:	R3,D4

Encoder:	C1,J2

